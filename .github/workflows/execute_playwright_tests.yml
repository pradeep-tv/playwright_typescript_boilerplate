name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: "Environment (dev/uat/prod)"
        type: choice
        options:
          - prod
          - uat
          - dev
        required: true
        default: "dev"
      TEST_TYPE:
        description: "TestType"
        type: choice
        default: 'SMOKE'
        options:
          - SMOKE
          - E2E
          - VERIFICATION
          - FIELDVALIDATION
          - LOCALIZATION
          - PRECONDITION
      MODULE_TYPE:
        description: "Projects"
        type: choice
        default: 'CPORT'
        options:
          - CPORT
          - CPAC
          - CONNECT_DESK
      
      ALL_SERVICES:
        description: "All Services"
        type: boolean
        default: false
      SELECTED_SERVICES:
        description: "Multiple Services"
        default: '{"cost_contract": "1", "drivers": "0", "precheck": "0", "safety": "0", "vehicles": "0"}'
        
jobs:
  test:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-noble # latest Playwright docker image
    env:
      id: configure-env
      # Workflow-level environment variable
      # TEST_ENV: "dev"
      TEST_ENV: ${{ github.event.inputs.ENVIRONMENT || 'prod' }}
      TEST_TYPE: ${{ github.event.inputs.TEST_TYPE || 'SMOKE' }}
      MODULE_TYPE: ${{ github.event.inputs.MODULE_TYPE || 'CPORT' }}
      ALL_SERVICES: ${{ github.event.inputs.ALL_SERVICES || false }}
      SELECTED_SERVICES: ${{ github.event.inputs.SELECTED_SERVICES }}
      # run: |
      #   MODULES=CPORT,CPAC,SRC,CA
      #   if [ '${{ github.event.inputs.ALL_MODULES }}' != 'true' ]; then
      #     echo '${{ github.event.inputs.SELECTED_MODULES }}' > inputs.json
      #     if [ '${{ github.event.inputs.ALL_MODULES }}' != 'true' ]; then
      #       SELECTED_MODULES=''
      #       for module in ${MODULES//,/ }; do
      #         value=$(jq ".${module}"  inputs.json -r)
      #         if [ "$value" == "1" ]; then
      #           SELECTED_MODULES+="$module,"
      #         fi
      #       done
      #       MODULES=${SELECTED_MODULES::-1}
      #     fi
      #   fi
      #   echo "MODULES: $MODULES"
      #   FEATURES=$(echo "${MODULES//,/$'OR'}")
      #   echo "MODULES=${MODULES}" >> $GITHUB_OUTPUT
      #   echo "FEATURES=${FEATURES}" >> $GITHUB_OUTPUT
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    # - uses: actions/setup-node@v4
      # with:
        # node-version: lts/*
    - name: Install dependencies
      run: npm ci
    # - name: Install Playwright Chromium Browser
      # run: npx playwright install chromium --with-deps
    - name: Run Playwright tests
      id: playwright-tests
      run: |
        echo "Running Playwright tests..."
        TIMESTAMP=$(date +'%Y-%m-%d-%H-%M')
        echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_OUTPUT
        echo "TEST_ENV : ${{env.TEST_ENV}}"
        echo "TEST_TYPE : ${{env.TEST_TYPE}}"
        echo "MODULE_TYPE : ${{env.MODULE_TYPE}}"
        echo "ALL_SERVICES : ${{env.ALL_SERVICES}}"
        echo "SELECTED_SERVICES : ${{env.SELECTED_SERVICES}}"
        
        # Determine run path
        RUN_PATH=""
        if [[ "$MODULE_TYPE" == "CPORT" ]]; then
        
          echo "DEBUG: Parsing SELECTED_SERVICES JSON..."
          echo "$SELECTED_SERVICES" | jq .
          
          # Extract keys with value "1"
          SERVICES=$(echo $SELECTED_SERVICES | jq -r 'to_entries | map(select(.value=="1")) | .[].key')
          echo "üëâ SERVICES raw value: '$SERVICES'"
          if [[ -z "$SERVICES" ]]; then
            echo "‚ö†Ô∏è No services selected, falling back to MODULE_TYPE"
            RUN_PATH="$MODULE_TYPE"
          else
            for service in $SERVICES; do
              RUN_PATH="$RUN_PATH $MODULE_TYPE/$service"
            done
          fi
        else
          RUN_PATH="$MODULE_TYPE"
        fi
        echo "RUN_PATH = $RUN_PATH"
        # Execute Playwright with dynamic path
        echo "RUN_PATH resolved to: $RUN_PATH"
        npx playwright test $RUN_PATH

      # npx playwright test `${env.MODULE_TYPE}`
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 1
